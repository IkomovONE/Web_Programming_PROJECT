{"ast":null,"code":"var _jsxFileName = \"/Users/ikomovone/Desktop/Web_programming_PROJECT/client/src/components/EditComment.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditComment() {\n  _s();\n  const reference = useRef(null);\n  const {\n    id,\n    author,\n    content\n  } = useParams();\n  const navigate = useNavigate();\n  window.scroll(0, 0);\n  const [data, setData] = useState({\n    author: author,\n    content: content\n  });\n  const [dataType, setDataType] = useState(\"Comment\");\n  useEffect(() => {\n    window.scroll(0, 0);\n  }, [dataType]);\n  const submit = event => {\n    event.preventDefault();\n    var token = window.localStorage.getItem(\"token\");\n    fetch(\"/api/token/check\", {\n      method: \"POST\",\n      headers: {\n        \"authorization\": token\n      },\n      body: null\n    }).then(response => {\n      return response.json();\n    }).then(json => {\n      if (json.message == \"VERIFIED\") {\n        var Newcontent = String(event.target[0].value);\n        fetch(\"/api/editComment\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            postID: id,\n            author: author,\n            content: Newcontent\n          })\n        }).then(response => {\n          return response.json();\n        }).then(json => {\n          if (!json.success) {\n            if (json.msg = \"Password incorrect\") {\n              alert(\"Wrong password\");\n            } else if (json.msg = \"User not found!\") {\n              alert(\"Invalid credentials!\");\n            } else {\n              alert(\"Something else is wrong, error\");\n            }\n          } else {\n            navigate(\"/post/\" + id);\n            window.location.reload();\n          }\n        });\n      } else {\n        navigate(\"/\");\n      }\n    });\n  };\n  function handleEnter(event) {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      const textarea = reference.current;\n      const value = textarea.value;\n      const selectionStart = textarea.selectionStart;\n      const selectionEnd = textarea.selectionEnd;\n      const newValue = value.substring(0, selectionStart) + '\\n' + value.substring(selectionEnd);\n      textarea.value = newValue;\n      textarea.selectionStart = textarea.selectionEnd = selectionStart + 1;\n    }\n  }\n  const [description, setDescription] = useState(data.content);\n  const handleChangeD = event => {\n    setDescription(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"div\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"darkened\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"-------------------------------------------------\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"label\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"descr\",\n          type: \"text\",\n          name: \"descr\",\n          value: description,\n          onChange: handleChangeD,\n          children: data.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"submit\",\n          type: \"submit\",\n          name: \"submit\",\n          value: \"Save the changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n}\n_s(EditComment, \"N2ERTTcRW4QaVS6v857NyI5Nse4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditComment;\nexport default EditComment;\nvar _c;\n$RefreshReg$(_c, \"EditComment\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","jsxDEV","_jsxDEV","EditComment","_s","reference","id","author","content","navigate","window","scroll","data","setData","dataType","setDataType","submit","event","preventDefault","token","localStorage","getItem","fetch","method","headers","body","then","response","json","message","Newcontent","String","target","value","JSON","stringify","postID","success","msg","alert","location","reload","handleEnter","key","textarea","current","selectionStart","selectionEnd","newValue","substring","description","setDescription","handleChangeD","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","onChange","_c","$RefreshReg$"],"sources":["/Users/ikomovone/Desktop/Web_programming_PROJECT/client/src/components/EditComment.js"],"sourcesContent":["import * as React from 'react';\nimport {useState, useEffect, useRef} from 'react'\n\nimport {useParams} from 'react-router-dom'\nimport { useNavigate } from \"react-router-dom\";\n\nfunction EditComment() {\n\n    const reference = useRef(null);\n\n    const {id, author, content} = useParams()\n\n\n\n   \n\n    const navigate = useNavigate();\n\n\n    window.scroll(0,0)\n\n    const [data, setData] = useState({\n        author: author,\n        content: content\n    })\n\n    \n\n    const [dataType, setDataType] = useState(\"Comment\")\n    \n\n   \n\n        useEffect(() => {\n\n            window.scroll(0,0)\n\n\n            \n    \n            \n            \n            \n\n           \n        }, [dataType])\n\n        \n\n    \n\n\n    \n\n\n    \n\n\n    const submit = (event) => {\n        event.preventDefault();\n\n        \n\n        var token= window.localStorage.getItem(\"token\")\n\n\n\n        fetch(\"/api/token/check\", {\n            method: \"POST\",\n      \n            headers: {\n              \"authorization\": token\n            },\n      \n            body: null,\n            \n      \n          }).then(response => {\n                      \n            return response.json()}).then(json => {\n      \n          if (json.message== \"VERIFIED\") {\n\n\n            \n\n\n            \n\n            var Newcontent= String(event.target[0].value);\n    \n           \n    \n           \n    \n            \n    \n           \n\n            \n            \n        \n            fetch(\"/api/editComment\", {\n                method: \"POST\",\n    \n                body: JSON.stringify({\n                    postID: id,\n                    author: author,\n                    \n                    content: Newcontent,\n                    \n                    \n                \n                }),\n                    \n             \n    \n            }).then(response => {\n                    \n                return response.json()})\n            .then(json => {\n    \n                if (!json.success) {\n                    \n                    if (json.msg= \"Password incorrect\") {\n                        alert(\"Wrong password\")\n                    }\n    \n                    else if (json.msg= \"User not found!\") {\n                        alert(\"Invalid credentials!\")\n                        \n                    }\n                    else {\n                        alert(\"Something else is wrong, error\")\n                    }\n                }\n    \n                else {\n    \n                    navigate(\"/post/\"+id)\n    \n                    window.location.reload();\n                }\n            });\n    \n\n\n      \n            \n      \n          }\n      \n          else {\n            navigate(\"/\")\n          }\n        });\n        \n\n\n     \n    \n\n}\n\n\n    \n\n\n    function handleEnter(event) {\n\n        if (event.key === 'Enter') {\n            event.preventDefault();\n\n            const textarea = reference.current;\n            const value = textarea.value;\n            const selectionStart = textarea.selectionStart;\n            const selectionEnd = textarea.selectionEnd;\n            const newValue = value.substring(0, selectionStart) + '\\n' + value.substring(selectionEnd);\n            textarea.value = newValue;\n            textarea.selectionStart = textarea.selectionEnd = selectionStart + 1;\n        }\n\n    }\n\n    \n\n\n\n\n    \n    \n\n    const [description, setDescription] = useState(data.content);\n\n\n   \n\n      \n\n      const handleChangeD = (event) => {\n        setDescription(event.target.value);\n      };\n    \n      \n      \n\n    return (\n\n        <div className=\"div\">\n\n            <div id=\"darkened\">\n\n\n            <h1>Edit Comment</h1>\n            <h2>-------------------------------------------------</h2>\n\n\n            <form onSubmit={submit}> \n                \n\n          \n               \n                <label id= \"label\" >Description</label>\n\n                <textarea id= \"descr\" type=\"text\" name=\"descr\" value={description} onChange={handleChangeD}>{data.content}</textarea>\n\n                <p></p>\n    \n                \n\n\n                <input id= \"submit\" type= \"submit\" name=\"submit\" value= \"Save the changes\"></input>\n                <p></p>\n\n            \n              </form>\n\n              \n\n\n\n\n            </div>\n\n\n\n        </div>\n\n\n  \n\n\n    )\n    }\n\n\n\n\n\n\nexport default EditComment"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}