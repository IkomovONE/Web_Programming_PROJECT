{"ast":null,"code":"// TODO why is `this` in use at all?\nvar self = this;\n(function () {\n  \"use strict\";\n\n  /* node-highlight is based on highlight.js (see vendor/highlight.js)       */\n  /* usage: html = require(\"highlight\").Highlight(code_string);              */\n  /* NB! You also need to include a CSS file from vendor/highlight.js/styles */\n\n  // load syntax highlighter\n  // TODO create private instances of highlighter \n  // (with fewer langs) for greater accuracy\n  var Highlight = module.exports,\n    fs = require('fs'),\n    hljs = require('./vendor/highlight.js/highlight').hljs,\n    langRelPath = \"vendor/highlight.js/languages/\",\n    langPath = __dirname + \"/\" + langRelPath,\n    reEndsWithJs = /\\.js$/i,\n    loadedMap = {},\n    availableMap = {};\n\n  // TODO this should move to init in a newer api\n  Highlight.loadedLanguages = [];\n  function acceptJsFiles(lang) {\n    if (lang.match(reEndsWithJs)) {\n      return true;\n    }\n  }\n  function preRequireModules(lang, i, arr) {\n    arr[i] = lang = lang.replace(reEndsWithJs, '');\n    try {\n      availableMap[lang] = require('./' + langRelPath + lang);\n    } catch (e) {\n      console.error(\"[ERROR] could not preload language pack for '\" + lang + \"'\");\n      console.error(e.message);\n      console.error(e.stack);\n      return;\n    }\n  }\n\n  // find languages from list of fsnodes\n  function preloadLanguages(err, fsnodes) {\n    if (err) {\n      console.error(\"[ERROR] langPath '\" + langPath + \"'\");\n      console.error(err.message);\n      console.error(err.stack);\n      return;\n    }\n    Highlight.languages = fsnodes.filter(acceptJsFiles).sort(function (a, b) {\n      // xml must be first (others depend on it)\n      if ('xml' === a) {\n        return -100000000;\n      }\n      // django should be after xml\n      if ('django.js' === a) {\n        return 1000000000;\n      }\n      if (a === b) {\n        return 0;\n      }\n      if (a < b) {\n        return -1;\n      } else if (a > b) {\n        return 1;\n      } else {\n        // NaN vs string\n        return 0;\n      }\n    });\n    Highlight.languages.forEach(preRequireModules);\n  }\n  function loadLangs(cb, langs) {\n    var err;\n    if ('string' === typeof langs) {\n      langs = [langs];\n    }\n    if (!Array.isArray(langs)) {\n      cb(new Error(\"no array of languages given\"));\n      return;\n    }\n    langs.some(function (lang) {\n      var addLangToHighlightInstance;\n      if (loadedMap[lang]) {\n        return;\n      }\n      addLangToHighlightInstance = availableMap[lang];\n      if (!addLangToHighlightInstance) {\n        err = new Error(\"No language pack available for '\" + lang + \"'\");\n        return true;\n      }\n      try {\n        addLangToHighlightInstance(hljs);\n      } catch (e) {\n        // TODO fix django and html-xml\n        console.warn('[WARN] failed to load', lang);\n        console.warn(e.message);\n        console.warn(e.stack);\n        Highlight.languages = Highlight.languages.filter(function (l) {\n          return l !== lang;\n        });\n        return;\n      }\n      loadedMap[lang] = true;\n      Highlight.loadedLanguages.push(lang);\n    });\n\n    // future-proofing for async api\n    cb(err);\n  }\n  function init(cb, langs, opts) {\n    if (!Array.isArray(langs)) {\n      langs = Highlight.languages.slice();\n    }\n    loadLangs(cb, langs);\n  }\n\n  /**\n   * highlight(text, tabReplace, useCodeBlocks) -> HTML\n   * - text (String): text to be highlighted\n   * - tabReplace (String): defaults to 4 spaces if none, replaces \\t chars\n   * - useCodeBlocks (Boolean): If TRUE use only text between <code> and </code>\n   *\n   * Highlights program code inside a string by setting appropriate CSS class\n   * elements.\n   **/\n  function highlight(text, tabReplace, useCodeBlocks) {\n    tabReplace = tabReplace || '    ';\n    text = text.replace(/\\r\\n|\\r|\\n/g, '\\n'); // remove \\r\n    if (!!useCodeBlocks) {\n      // JS regexpes have some multiline issues, so we temporarily remove them\n      return text.replace(/\\n/g, '\\uffff').replace(/<code([^>]*)>(.*?)<\\/code>/gm, function (original, attrs, source) {\n        return '<code' + attrs + '>' + hljs.highlightText(source.replace(/\\uffff/g, \"\\n\"), tabReplace) + '</code>';\n      }).replace(/&amp;(\\w+;)/g, '&$1').replace(/\\uffff/g, \"\\n\");\n    } else {\n      return hljs.highlightText(text, tabReplace);\n    }\n  }\n\n  //fs.readdir(langPath, preloadLanguages);\n  // using readdirSync To avoid API Change\n  preloadLanguages(null, fs.readdirSync(langPath));\n  Highlight.init = init;\n  Highlight.highlight = highlight;\n\n  // Maintain current api:\n  // TODO why is `this` in use at all?\n  function backwardsCompat() {\n    // currently synchronous\n    Highlight.init(function () {}, ['php']);\n    return Highlight.highlight.apply(null, arguments);\n  }\n  Highlight.Highlight = self.Highlight = backwardsCompat;\n})();","map":{"version":3,"names":["self","Highlight","module","exports","fs","require","hljs","langRelPath","langPath","__dirname","reEndsWithJs","loadedMap","availableMap","loadedLanguages","acceptJsFiles","lang","match","preRequireModules","i","arr","replace","e","console","error","message","stack","preloadLanguages","err","fsnodes","languages","filter","sort","a","b","forEach","loadLangs","cb","langs","Array","isArray","Error","some","addLangToHighlightInstance","warn","l","push","init","opts","slice","highlight","text","tabReplace","useCodeBlocks","original","attrs","source","highlightText","readdirSync","backwardsCompat","apply","arguments"],"sources":["/Users/ikomovone/Desktop/Web_programming_PROJECT/client/node_modules/highlight/lib/highlight.js"],"sourcesContent":["// TODO why is `this` in use at all?\nvar self = this;\n\n(function () {\n  \"use strict\";\n  /* node-highlight is based on highlight.js (see vendor/highlight.js)       */\n  /* usage: html = require(\"highlight\").Highlight(code_string);              */\n  /* NB! You also need to include a CSS file from vendor/highlight.js/styles */\n\n  // load syntax highlighter\n  // TODO create private instances of highlighter \n  // (with fewer langs) for greater accuracy\n  var Highlight = module.exports\n    , fs = require('fs')\n    , hljs = require('./vendor/highlight.js/highlight').hljs\n    , langRelPath = \"vendor/highlight.js/languages/\"\n    , langPath = __dirname + \"/\" + langRelPath\n    , reEndsWithJs = /\\.js$/i\n    , loadedMap = {}\n    , availableMap = {}\n    ;\n\n  // TODO this should move to init in a newer api\n  Highlight.loadedLanguages = [];\n\n  function acceptJsFiles(lang) {\n    if (lang.match(reEndsWithJs)) {\n      return true;\n    }\n  }\n\n  function preRequireModules(lang, i, arr) {\n    arr[i] = lang = lang.replace(reEndsWithJs, '');\n\n    try {\n      availableMap[lang] = require('./' + langRelPath + lang);\n    } catch(e) {\n      console.error(\"[ERROR] could not preload language pack for '\" + lang + \"'\");\n      console.error(e.message);\n      console.error(e.stack);\n      return;\n    }\n  }\n\n  // find languages from list of fsnodes\n  function preloadLanguages(err, fsnodes) {\n\n    if (err) {\n      console.error(\"[ERROR] langPath '\" + langPath + \"'\");\n      console.error(err.message);\n      console.error(err.stack);\n      return;\n    }\n\n    Highlight.languages = fsnodes.filter(acceptJsFiles).sort(function (a, b) {\n      // xml must be first (others depend on it)\n      if ('xml' === a) {\n        return -100000000;\n      }\n      // django should be after xml\n      if ('django.js' === a) {\n        return 1000000000;\n      }\n      \n      if (a === b) {\n        return 0;\n      }\n\n      if (a < b) {\n        return -1;\n      } else if (a > b) {\n        return 1;\n      } else {\n        // NaN vs string\n        return 0;\n      }\n    });\n    Highlight.languages.forEach(preRequireModules);\n  }\n\n  function loadLangs(cb, langs) {\n    var err\n      ;\n\n    if ('string' === typeof langs) {\n      langs = [langs];\n    }\n\n    if (!Array.isArray(langs)) {\n      cb(new Error(\"no array of languages given\"));\n      return;\n    }\n\n    langs.some(function (lang) {\n      var addLangToHighlightInstance\n        ;\n\n      if (loadedMap[lang]) {\n        return;\n      }\n\n      addLangToHighlightInstance = availableMap[lang];\n\n      if (!addLangToHighlightInstance) {\n        err = new Error(\"No language pack available for '\" + lang + \"'\");\n        return true;\n      }\n\n      try {\n        addLangToHighlightInstance(hljs);\n      } catch(e) {\n        // TODO fix django and html-xml\n        console.warn('[WARN] failed to load', lang);\n        console.warn(e.message);\n        console.warn(e.stack);\n        Highlight.languages = Highlight.languages.filter(function (l) {\n          return l !== lang;\n        });\n        return;\n      }\n\n      loadedMap[lang] = true;\n      Highlight.loadedLanguages.push(lang);\n    });\n\n    // future-proofing for async api\n    cb(err);\n  }\n\n  function init(cb, langs, opts) {\n    if (!Array.isArray(langs)) {\n      langs = Highlight.languages.slice();\n    }\n\n    loadLangs(cb, langs);\n  }\n\n  /**\n   * highlight(text, tabReplace, useCodeBlocks) -> HTML\n   * - text (String): text to be highlighted\n   * - tabReplace (String): defaults to 4 spaces if none, replaces \\t chars\n   * - useCodeBlocks (Boolean): If TRUE use only text between <code> and </code>\n   *\n   * Highlights program code inside a string by setting appropriate CSS class\n   * elements.\n   **/\n  function highlight(text, tabReplace, useCodeBlocks){\n    tabReplace = tabReplace || '    ';\n    text = text.replace(/\\r\\n|\\r|\\n/g, '\\n'); // remove \\r\n    if (!!useCodeBlocks) {\n      // JS regexpes have some multiline issues, so we temporarily remove them\n      return text\n        .replace(/\\n/g,'\\uffff')\n        .replace(/<code([^>]*)>(.*?)<\\/code>/gm, function(original, attrs, source){\n          return '<code'+attrs+'>'+hljs.highlightText(source.replace(/\\uffff/g,\"\\n\"), tabReplace)+'</code>';\n        })\n        .replace(/&amp;(\\w+;)/g,'&$1').replace(/\\uffff/g,\"\\n\");\n    } else {\n      return hljs.highlightText(text, tabReplace);\n    }\n  }\n\n  //fs.readdir(langPath, preloadLanguages);\n  // using readdirSync To avoid API Change\n  preloadLanguages(null, fs.readdirSync(langPath));\n\n  Highlight.init = init;\n  Highlight.highlight = highlight;\n\n  // Maintain current api:\n  // TODO why is `this` in use at all?\n  function backwardsCompat() {\n    // currently synchronous\n    Highlight.init(function () {}, ['php']);\n    return Highlight.highlight.apply(null, arguments);\n  }\n  Highlight.Highlight = self.Highlight = backwardsCompat;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}