{"ast":null,"code":"var _jsxFileName = \"/Users/ikomovone/Desktop/Web_programming_PROJECT/client/src/components/Comment.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { Button } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = _ref => {\n  _s();\n  let {\n    comment\n  } = _ref;\n  const [user, setUser] = React.useState(\"\");\n  const {\n    id\n  } = useParams();\n  const CheckLogin = () => {\n    var token = window.localStorage.getItem(\"token\");\n    fetch(\"/api/token/check\", {\n      method: \"POST\",\n      headers: {\n        \"authorization\": token\n      },\n      body: null\n    }).then(response => {\n      return response.json();\n    }).then(json => {\n      if (json.message == \"VERIFIED\") {\n        setUser(json.username);\n      } else {}\n    });\n  };\n  CheckLogin();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"authorComment\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/profile/\" + comment.author,\n        id: \"createdComment\",\n        children: [\" \", comment.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), user === comment.author && /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/editComment/\" + comment.author + \"/\" + comment.content,\n        id: \"created\",\n        children: \" Edit this comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"whenComment\",\n        children: [\"Last edited: \", comment.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"contentComment\",\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        id: \"textComment\",\n        children: [\" \", comment.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Comment, \"8OdIu1AeE7mz58UvZYSPXC0cXfk=\", false, function () {\n  return [useParams];\n});\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","Button","Link","useParams","jsxDEV","_jsxDEV","Comment","_ref","_s","comment","user","setUser","useState","id","CheckLogin","token","window","localStorage","getItem","fetch","method","headers","body","then","response","json","message","username","children","component","to","author","fileName","_jsxFileName","lineNumber","columnNumber","content","date","_c","$RefreshReg$"],"sources":["/Users/ikomovone/Desktop/Web_programming_PROJECT/client/src/components/Comment.js"],"sourcesContent":["import * as React from 'react';\nimport { Button } from '@mui/material'\nimport {Link} from 'react-router-dom'\nimport {useParams} from 'react-router-dom'\n\n\nconst Comment = ({comment}) => {\n    \n    const [user, setUser] = React.useState(\"\");\n\n    const {id}= useParams()\n\n    \n\n\n  const CheckLogin = () => {\n\n    var token= window.localStorage.getItem(\"token\")\n\n    fetch(\"/api/token/check\", {\n      method: \"POST\",\n\n      headers: {\n        \"authorization\": token\n      },\n\n      body: null,\n      \n\n    }).then(response => {\n                \n      return response.json()})\n  .then(json => {\n\n    if (json.message== \"VERIFIED\") {\n\n     \n\n      setUser(json.username);\n\n      \n\n    }\n\n    else {\n      \n    }\n\n\n\n  })\n  };\n\n  CheckLogin();\n   \n\n    return (\n\n\n        <div id=\"Comment\">\n            \n            <div id= \"authorComment\">\n                \n                <Button component={Link} to={\"/profile/\"+comment.author} id=\"createdComment\"> {comment.author}</Button>\n\n                <a>|</a>\n\n                {user===comment.author && <Button component={Link} to={\"/editComment/\"+comment.author+\"/\"+comment.content} id=\"created\"> Edit this comment</Button>}\n\n                <a id= \"whenComment\">Last edited: {comment.date}</a>\n                \n            </div>\n\n            <div id=\"contentComment\" >\n                \n                <h6 id=\"textComment\"> {comment.content}</h6>\n                \n            </div>\n\n            \n\n                \n                \n        </div>\n\n\n        \n    )\n}\n\nexport default Comment\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}