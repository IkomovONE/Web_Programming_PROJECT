{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","App","_useState","useState","_useState2","_slicedToArray","userData","setUserData","React","createElement","className","onSubmit","e","preventDefault","fetch","method","headers","Content-type","body","JSON","stringify","mode","onChange","_objectSpread","_defineProperty","target","name","value","id","type","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2KCqEzBC,MAhEf,WAAe,IAAAC,EAEmBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAsB5B,OACEI,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAQC,UAAU,cAChBF,IAAAC,cAAA,UAAI,SAGJD,IAAAC,cAAA,QAAME,SAzBG,SAACC,GACdA,EAAEC,iBAGFC,MAAM,aAAc,CAChBC,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUd,GACrBe,KAAM,UAekBC,SAXT,SAACV,GACpBL,EAAWgB,YAAA,GAAKjB,EAAQkB,YAAA,GAAGZ,EAAEa,OAAOC,KAAOd,EAAEa,OAAOE,WAa9CnB,IAAAC,cAAA,SAAOmB,GAAI,SAAS,qBAEpBpB,IAAAC,cAAA,SAAOmB,GAAI,OAAOC,KAAK,OAAOH,KAAK,SAEnClB,IAAAC,cAAA,UAEAD,IAAAC,cAAA,SAAOmB,GAAI,SAAS,uBAEpBpB,IAAAC,cAAA,SAAOmB,GAAI,SAASC,KAAK,OAAOH,KAAK,WACrClB,IAAAC,cAAA,UAGAD,IAAAC,cAAA,SAAOmB,GAAI,QAAQC,KAAM,UAAU,oBAGnCrB,IAAAC,cAAA,SAAOmB,GAAI,QAAQC,KAAK,OAAOH,KAAK,UACpClB,IAAAC,cAAA,UAGAD,IAAAC,cAAA,SAAOmB,GAAI,SAASC,KAAM,SAASH,KAAK,SAASC,MAAO,wBACxDnB,IAAAC,cAAA,cC9CKqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCjC,EAAAa,EAAA,GAAAqB,KAAAlC,EAAAmC,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrC,IAAAC,cAACD,IAAMsC,WAAU,KACftC,IAAAC,cAACR,EAAG,QAOR6B","file":"static/js/main.a9deacfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import logo from './logo.svg';\nimport React, { Component }  from 'react';\nimport './App.css';\nimport {useState} from 'react'\n\nfunction App() {\n\n  const [userData, setUserData] = useState({})\n\n\n  const submit = (e) => {\n    e.preventDefault()\n    \n\n    fetch(\"/api/book/\", {\n        method: \"POST\",\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userData),\n        mode: \"cors\"\n    })\n  }\n\n  const handleChange = (e) => {\n    setUserData({...userData, [e.target.name]: e.target.value})\n}\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>books</h1>\n\n\n        <form onSubmit={submit} onChange={handleChange}> \n\n      \n          <label id= \"label\" >Name of the book:</label>\n\n          <input id= \"name\" type=\"text\" name=\"name\"></input>\n\n          <p></p>\n\n          <label id= \"label\" >Author of the book:</label>\n\n          <input id= \"author\" type=\"text\" name=\"author\"></input>\n          <p></p>\n\n\n          <label id= \"label\" type= \"number\" >Number of pages:</label>\n\n\n          <input id= \"pages\" type=\"text\" name=\"pages\"></input>\n          <p></p>\n\n\n          <input id= \"submit\" type= \"submit\" name=\"submit\" value= \"Save the book to DB\"></input>\n          <p></p>\n\n        \n        </form>\n        \n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}